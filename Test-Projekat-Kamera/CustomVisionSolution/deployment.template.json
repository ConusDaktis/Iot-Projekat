{
  "$schema-template": "2.0.0",
  "modulesContent": {
    "$edgeAgent": {
      "properties.desired": {
        "schemaVersion": "1.0",
        "runtime": {
          "type": "docker",
          "settings": {
            "minDockerVersion": "v1.25",
            "loggingOptions": "",
            "registryCredentials": {
              "raspberrypidockeretf": {
                "username": "$CONTAINER_REGISTRY_USERNAME_raspberrypidockeretf",
                "password": "$CONTAINER_REGISTRY_PASSWORD_raspberrypidockeretf",
                "address": "raspberrypidockeretf.azurecr.io"
              }
            }
          }
        },
        "systemModules": {
          "edgeAgent": {
            "type": "docker",
            "settings": {
              "image": "mcr.microsoft.com/azureiotedge-agent:1.0",
              "createOptions": {}
            }
          },
          "edgeHub": {
            "type": "docker",
            "status": "running",
            "restartPolicy": "always",
            "settings": {
              "image": "mcr.microsoft.com/azureiotedge-hub:1.0",
              "createOptions": {
                "HostConfig": {
                  "PortBindings": {
                    "5671/tcp": [
                      {
                        "HostPort": "5671"
                      }
                    ],
                    "8883/tcp": [
                      {
                        "HostPort": "8883"
                      }
                    ],
                    "443/tcp": [
                      {
                        "HostPort": "443"
                      }
                    ]
                  }
                }
              }
            },
            "Env": {
              "OptimizeForPerformance": {
                "value": "false"
              }
            }
          }
        },
        "modules": {
          "classifier": {
            "version": "1.0",
            "type": "docker",
            "status": "running",
            "restartPolicy": "always",
            "settings": {
              "image": "${MODULES.classifier}",
              "createOptions": {}
            }
          },
          "cameraCapture": {
            "version": "1.0",
            "type": "docker",
            "status": "running",
            "restartPolicy": "always",
            "settings": {
              "image": "${MODULES.cameraCapture.arm32v7}",
              "createOptions": {
                "HostConfig": {
                  "Binds": [
                    "/dev/vchiq:/dev/vchiq"
                  ],
                  "Devices": [
                    {
                      "PathOnHost": "/dev/vchiq",
                      "PathInContainer": "/dev/vchiq",
                      "CgroupPermissions": "mrw"
                    }
                  ],
                  "Priviledged": false
                },
                "Env": [
                  "IMAGE_PATH=picamera",
                  "IMAGE_PROCESSING_ENDPOINT=http://classifier/image"
                ]
              }
            }
          },
          "senseHat": {
            "version": "1.0",
            "type": "docker",
            "status": "running",
            "restartPolicy": "always",
            "env": {
              "THRESHOLD": {"value": "0.5"}
            },
            "settings": {
              "image": "${MODULES.senseHat}",
              "createOptions": {
                "HostConfig":{
                  "Binds":[
                    "/dev/i2c1:/dev/i2c1"
                  ],
                  "Privileged":true
                }
              }
            }
          }
        }
      }
    },
    "$edgeHub": {
      "properties.desired": {
        "schemaVersion": "1.0",
        "routes": {
          "CameraCaptureToSenseHatDisplay": "FROM /messages/modules/cameraCapture/outputs/output1 INTO BrokeredEndpoint(\"/modules/senseHat/inputs/input1\")",
          "classifierToIoTHub": "FROM /messages/modules/classifier/outputs/* INTO $upstream",
          "cameraCaptureToIoTHub": "FROM /messages/modules/cameraCapture/outputs/* INTO $upstream"
        },
        "storeAndForwardConfiguration": {
          "timeToLiveSecs": 7200
        }
      }
    },
    "cameraCapture": {
      "properties.desired": {
        "ImageClassifyThreshold": 0.5
      }
    }
  }
}